<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:attaches="clr-namespace:WorkflowEditor.Attaches"
                    xmlns:controls="clr-namespace:WorkflowEditor.Controls"
                    xmlns:converters="clr-namespace:WorkflowEditor.Converters">

    <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    <converters:WorkflowItemEllipseItemConverter x:Key="WorkflowItemEllipseItemConverter" />
    <converters:DoNoThingConverter x:Key="DoNoThingConverter" />
    <converters:ParallelogramEllipseConverter x:Key="ParallelogramEllipseConverter" />

    <Style x:Key="WorkflowEditorBaseStyle" TargetType="controls:WorkflowEditor">
        <Setter Property="Focusable" Value="True" />
        <Setter Property="ClipToBounds" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <!--<Setter Property="LineBrush" Value="{DynamicResource WorkflowEditorLineBrush}" />-->
        <!--<Setter Property="LayoutTransform">
        <Setter.Value>
            <ScaleTransform ScaleX="{Binding Scale, RelativeSource={RelativeSource AncestorType=Canvas}}"
                            ScaleY="{Binding Scale, RelativeSource={RelativeSource AncestorType=Canvas}}"/>
        </Setter.Value>
    </Setter>-->
    </Style>
    <Style BasedOn="{StaticResource WorkflowEditorBaseStyle}" TargetType="controls:WorkflowEditor" />

    <Style x:Key="WorkflowItemBaseStyle" TargetType="controls:WorkflowItem">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Width" Value="100" />
        <Setter Property="Height" Value="40" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background" Value="{DynamicResource SystemColorsWindow}" />
        <Setter Property="BorderBrush" Value="{DynamicResource EnvironmentMainWindowActiveDefaultBorder}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:WorkflowItem">
                    <controls:ShapeBorder x:Name="ShapeBorder"
                                          Background="{TemplateBinding Background}"
                                          BorderBrush="{TemplateBinding BorderBrush}"
                                          BorderThickness="{TemplateBinding BorderThickness}"
                                          Geometry="{Binding Geometry, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}">
                        <controls:SimplePanel>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />

                            <!--  左边的中间圆形  -->
                            <controls:EllipseItem x:Name="EllipseLeft"
                                                  HorizontalAlignment="Left"
                                                  VerticalAlignment="Center"
                                                  Dock="Left" />
                            <!--  顶边的中间圆形  -->
                            <controls:EllipseItem x:Name="EllipseTop"
                                                  HorizontalAlignment="Center"
                                                  VerticalAlignment="Top"
                                                  Dock="Top" />
                            <!--  右边的中间圆形  -->
                            <controls:EllipseItem x:Name="EllipseRight"
                                                  HorizontalAlignment="Right"
                                                  VerticalAlignment="Center"
                                                  Dock="Right" />
                            <!--  底边的中间圆形  -->
                            <controls:EllipseItem x:Name="EllipseBottom"
                                                  HorizontalAlignment="Center"
                                                  VerticalAlignment="Bottom"
                                                  Dock="Bottom" />

                            <Thumb x:Name="PART_Thumb"
                                   Width="16"
                                   Height="16"
                                   HorizontalAlignment="Right"
                                   VerticalAlignment="Bottom"
                                   Cursor="SizeNWSE"
                                   Visibility="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IsSelected, Converter={StaticResource BoolToVisibilityConverter}}">
                                <Thumb.Clip>
                                    <PathGeometry>
                                        <PathFigure StartPoint="0,16">
                                            <LineSegment Point="16,0" />
                                            <LineSegment Point="16,16" />
                                            <LineSegment Point="0,16" />
                                        </PathFigure>
                                    </PathGeometry>
                                </Thumb.Clip>
                            </Thumb>
                        </controls:SimplePanel>
                    </controls:ShapeBorder>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="Orange" />
                            <Setter TargetName="ShapeBorder" Property="IsDashed" Value="True" />
                            <Setter Property="Panel.ZIndex" Value="1" />
                        </Trigger>
                        <Trigger Property="StepType" Value="Begin">
                            <Setter TargetName="ShapeBorder" Property="attaches:CornerRadiusAttach.IsCircular" Value="True" />
                        </Trigger>
                        <Trigger Property="StepType" Value="Condition">
                            <Setter TargetName="ShapeBorder" Property="ShapeType" Value="Diamond" />
                        </Trigger>
                        <Trigger Property="StepType" Value="Reference">
                            <Setter TargetName="ShapeBorder" Property="ShapeType" Value="Parallelogram" />
                        </Trigger>
                        <Trigger Property="StepType" Value="End">
                            <Setter TargetName="ShapeBorder" Property="attaches:CornerRadiusAttach.IsCircular" Value="True" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource WorkflowItemBaseStyle}" TargetType="controls:WorkflowItem" />

    <Style x:Key="EllipseItemBaseStyle" TargetType="controls:EllipseItem">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Width" Value="8" />
        <Setter Property="Height" Value="8" />
        <Setter Property="Background" Value="#FD5618" />
        <Setter Property="BorderBrush" Value="#7B68EE" />
        <Setter Property="Visibility">
            <Setter.Value>
                <MultiBinding Converter="{StaticResource WorkflowItemEllipseItemConverter}">
                    <Binding Path="Dock" RelativeSource="{RelativeSource Mode=Self}" />
                    <Binding Path="StepType" RelativeSource="{RelativeSource AncestorType=controls:WorkflowItem}" />
                </MultiBinding>
            </Setter.Value>
        </Setter>
        <Setter Property="Margin">
            <Setter.Value>
                <MultiBinding Converter="{StaticResource ParallelogramEllipseConverter}">
                    <Binding Path="ActualWidth" RelativeSource="{RelativeSource Mode=Self}" />
                    <Binding Path="ActualHeight" RelativeSource="{RelativeSource Mode=Self}" />
                    <Binding Path="Dock" RelativeSource="{RelativeSource Mode=Self}" />
                    <Binding Path="BorderThickness" RelativeSource="{RelativeSource AncestorType=controls:ShapeBorder}" />
                    <Binding Path="ShapeType" RelativeSource="{RelativeSource AncestorType=controls:ShapeBorder}" />
                    <Binding Path="Shear" RelativeSource="{RelativeSource AncestorType=controls:ShapeBorder}" />
                </MultiBinding>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:EllipseItem">
                    <Ellipse Width="{TemplateBinding Width}"
                             Height="{TemplateBinding Height}"
                             Margin="{TemplateBinding Padding}"
                             Fill="{TemplateBinding Background}"
                             Stroke="{TemplateBinding BorderBrush}"
                             StrokeThickness="{TemplateBinding StrokeThickness}" />
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="controls:WorkflowEditor.EditorStatus" Value="Drawing" />
                            </MultiTrigger.Conditions>
                            <!--<MultiTrigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard AutoReverse="True" RepeatBehavior="Forever">
                                    <ColorAnimation Storyboard.TargetProperty="(Control.BorderBrush).(SolidColorBrush.Color)"
                                                    From="#FD5618"
                                                    To="#7B68EE"
                                                    Duration="0:0:1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </MultiTrigger.EnterActions>-->
                            <MultiTrigger.Setters>
                                <Setter Property="Height" Value="14" />
                                <Setter Property="Width" Value="14" />
                                <Setter Property="StrokeThickness" Value="3" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="controls:WorkflowEditor.EditorStatus" Value="None" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Height" Value="14" />
                                <Setter Property="Width" Value="14" />
                                <Setter Property="StrokeThickness" Value="3" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource EllipseItemBaseStyle}" TargetType="controls:EllipseItem" />

    <Style x:Key="PathItemBaseStyle" TargetType="controls:PathItem">
        <!--<Setter Property="ContentTemplate" Value="{Binding RelativeSource={RelativeSource AncestorType=controls:WorkflowEditor}, Path=PathTemplate}" />
    <Setter Property="ContentTemplateSelector" Value="{Binding RelativeSource={RelativeSource AncestorType=controls:WorkflowEditor}, Path=PathTemplateSelector}" />-->
        <!--<Setter Property="Content" Value="{Binding RelativeSource={RelativeSource AncestorType=controls:WorkflowItem}, Path=DataContext}" />-->
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Panel.ZIndex" Value="-1" />
        <Setter Property="ContextMenu">
            <Setter.Value>
                <ContextMenu DataContext="{Binding PlacementTarget, RelativeSource={RelativeSource Self}}">
                    <MenuItem Header="是否为曲线"
                              IsCheckable="True"
                              IsChecked="{Binding IsCurve}" />
                    <MenuItem Command="{Binding DeleteCommand}" Header="删除" />
                </ContextMenu>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:PathItem">
                    <Grid Background="{TemplateBinding Background}">
                        <Path Fill="#111E1E1E"
                              Stroke="{DynamicResource EnvironmentMainWindowActiveDefaultBorder}"
                              StrokeDashArray="{TemplateBinding StrokeDashArray}"
                              StrokeThickness="2">
                            <Path.Data>
                                <PathGeometry>
                                    <PathFigure StartPoint="{Binding Point0, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource DoNoThingConverter}}">
                                        <BezierSegment Point1="{Binding Point1, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource DoNoThingConverter}}"
                                                       Point2="{Binding Point2, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource DoNoThingConverter}}"
                                                       Point3="{Binding Point3, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource DoNoThingConverter}}" />
                                    </PathFigure>
                                </PathGeometry>
                            </Path.Data>
                        </Path>
                        <controls:SimplePanel HorizontalAlignment="Center" VerticalAlignment="Center">
                            <ContentPresenter Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </controls:SimplePanel>

                        <!--  Arrowhead  -->
                        <Polygon Fill="{DynamicResource EnvironmentMainWindowActiveDefaultBorder}" Points="{Binding Points, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="#122E2E2E" />
                            <Setter Property="StrokeDashArray">
                                <Setter.Value>
                                    <DoubleCollection>2,2</DoubleCollection>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource PathItemBaseStyle}" TargetType="controls:PathItem" />
</ResourceDictionary>